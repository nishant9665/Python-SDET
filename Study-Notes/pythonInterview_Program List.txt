# for loop range function:

print("For loop study ...............")
numbers = [1, 2, 4, 6, 11, 20]
for var in numbers:
    print(var)
print("********************")
for i in range(1, 11):
    print(i)

print("Range function with iterations")
numberx = [1, 2, 7, 5, 22, 15, 45, 35, 20]

for i in range(len(numberx)):
    print(numberx[i])

print("********************  Range ****************************")
for j in range(1, 10, 2):
    print(j)
----------
List practices:
list = [22, 10, 12, 4, 6, 8, 9, 5, 14, 7]
print("This is list :", list)
print("This is length :",len(list)-1)
print("This is 1st element :",list[0])
print("This is 2nd element :",list[1])

# Slicing the elements
print("start from 0 to 6 :", list[0:6])
# By default, the index value is 0 so its starts from the 0th element and go for index -1.
print("This is slice only :",list[:])
print("This is list from 2 to 5 :", list[2:5])
print("This is list from -5 to -2 :", list[-5:-2])
print("This is list from 1 to 6 by 2 steps :", list[1:6:2])
print("This is list from 0 to len-1 by 3 steps :", list[1:len(list)-1:3])

-----------------
list = [1, 2, 3, 4, 5]
print("This is list :",list)
print("This is length ",len(list))
print("This is for index -1 :", list[-1])
print("This is for index -3 :", list[-3:])
print("This is for index :-1 :", list[:-1])
print("This is for index -3: -1 :",list[-3:-1])

----------------------------------
list = [1, 22, 5, 4, 11, 33, 12, 67, 34, 9, 7]

print("This is list :", list)
print("This is length :", len(list))

print("This is 5 th index :", list[5])
print("This is 9 th index :", list[9])
print("This is from 2 to 8 :", list[2:8])
print("This is from 1 to 9 with 2 steps :", list[0:9:2])

# It will assign value to the value to the second index
list[2] = 10
print("index 2 updated by 10 : ",list)
# Adding multiple-element
list[1:3] = [89, 78]
print("Index 1 and 3 updated :", list)
# It will add value at the end of the list
list[-1] = 25
print("Index -1 updated for ",list)


output:
D:\PythonSept-26\venv\Scripts\python.exe D:/PythonSept-26/python_Study/tp.py
This is list : [1, 22, 5, 4, 11, 33, 12, 67, 34, 9, 7]
This is length : 11
This is 5 th index : 33
This is 9 th index : 9
This is from 2 to 8 : [5, 4, 11, 33, 12, 67]
This is from 1 to 9 with 2 steps : [1, 5, 11, 12, 34]
index 2 updated by 10 :  [1, 22, 10, 4, 11, 33, 12, 67, 34, 9, 7]
Index 1 and 3 updated : [1, 89, 78, 4, 11, 33, 12, 67, 34, 9, 7]
Index -1 updated for  [1, 89, 78, 4, 11, 33, 12, 67, 34, 9, 25]

Process finished with exit code 0

-----------------------------------------------------------------------
ex:1
li = []

num = int(input("Enter the array list size:"))

for i in range(num):
    li.append(input("Enter the items: "))
print("Print the list of items")

for x in li:
    print(x)

----------
D:\PythonSept-26\venv\Scripts\python.exe D:/PythonSept-26/python_Study/tp.py
Enter the array list size:3
Enter the items: nis
Enter the items: 22
Enter the items: er
Print the list of items
nis
22
er

Process finished with exit code 0

-----------------------------------------------------------------------------------
# removing element from list

list = [1, 4, 6, 3, 77, 45, 12]
print("Before removing the items: ", list)

list.remove(45)
print("After removing the items: ", list)
print("This is max number from list :", max(list))
print("This is min number from list :", min(list))
print("This is min number from list :", sum(list))


--------------
# removing duplicate element from list

list = [1, 4, 6, 3, 77,43,32,2,2,4,4,6, 45, 12]

l2=[]
for i in list:
    if i not in l2:
        l2.append(i)
        
print(l2)


-------------
Check Even or Odd Number
print("Enter the number :")
num = int(input())

if num % 2 == 0:
    print(num, ": is even number")
else:
    print(num, ": is odd number")

-----------------
def CheckEvenOdd(num):
    if num % 2 == 0:
        print(num, ": is even number")
    else:
        print(num, ": is odd number")


print("Enter the number :")
num = int(input())

CheckEvenOdd(num)
-------------
class CheckNum:
    def CheckEvenOdd(self,num):
        if num % 2 == 0:
            print(num, ": is even number")
        else:
            print(num, ": is odd number")


print("Enter the number :")
num = int(input())

obj =CheckNum()
obj.CheckEvenOdd(num)

-----------------------
# prime Number

print("Enter the number :", end="")
num = int(input())

p = 0
for i in range(2, num):
    if num % i == 0:
        p = 1
        break
if p == 0:
    print(num, "is a prime number")
else:
    print(num, "is not a prime number")

--------
D:\PythonSept-26\venv\Scripts\python.exe D:/PythonSept-26/python_Study/tp.py
Enter the number :13
13 is a prime number

Process finished with exit code 0

---------------------
def checkPrime(num):
    p = 0
    for i in range(2, num):
        if num % i == 0:
            p = 1
            break

    if p == 0:
        print(num, "is a prime number")
    else:
        print(num, "is not a prime number")


print("Enter the number :", end="")
num = int(input())
checkPrime(num)

----------------
class CheckPrimeNumber:
    def CheckPrime(num):
        p = 0
        for i in range(2, num):
            if num % i == 0:
                p = 1
                break

        if p == 0:
            print(num, "is a prime number")
        else:
            print(num, "is not a prime number")


print("Enter the number :", end="")
num = int(input())
obj = CheckPrimeNumber

obj.CheckPrime(num)

------------------------------
print("Enter the char : ", end="")
c = input()
if c >= 'a' and c <= 'z':
    print(c, ": is char which is present from a to z")
elif c >= 'A' and c <= 'Z':
    print(c, ": is char which is present from A to Z")
else:
    print(c, " : is not a char !!!!!!!!!!!!")

--------
def checkChar(c):
    if c >= 'a' and c <= 'z':
        print(c, ": is char which is present from a to z")
    elif c >= 'A' and c <= 'Z':
        print(c, ": is char which is present from A to Z")
    else:
        print(c, " : is not a char !!!!!!!!!!!!")


print("Enter the char : ", end="")
c = input()
checkChar(c)

-----------
print("Enter the char : ", end="")

c = input()
list = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']
for i in list:
    if i == c:
        print(c, "This is vowels")
        break
else:
    print(c, "This is constant")

------------------
print("Enter the number : ", end="")

num = int(input())
original = num
rev = 0

while num > 0:
    rem = num % 10
    rev = rem + (rev * 10)
    num = int(num / 10)

if original == rev:
    print("This is number and rev number are matched")
else:
    print("This is number has not matched")

---------------
print("Enter the Number: ", end="")
num = int(input())

temp = num
noOfDigit = len(str(num))
res = 0
while num > 0:
    rem = num % 10
    res = res + (rem ** noOfDigit)
    num = int(num / 10)

if res == temp:
    print("\n" + str(temp) + " is an Armstrong Number")  #153
else:
    print("\n" + str(temp) + " is not an Armstrong Number")

---------------------
print("Enter the Number: ", end="")
num = int(input())

temp = num
noOfDigit = len(str(num))
res = 0
while num > 0:
    rem = num % 10
    res = res + (rem ** noOfDigit)
    num = int(num / 10)

if res == temp:
    print("\n" + str(temp) + " is an Armstrong Number")
else:
    print("\n" + str(temp) + " is not an Armstrong Number")

print("Pattern of Numbers: ")
num = 1
for i in range(5):
    for j in range(i+1):
        print(num, end=" ")
        num = num+1
    print()
--------------------
print("Print then patterns")

for i in range(5):
    for j in range(i + 1):
        print("*", end=" ")
    print("")

-------------------
print("Print then patterns")

for i in range(5):
    for j in range(i, 5):
        print("*", end=" ")
    print("")
--------------
print("Print then patterns")
num = 1
for i in range(5):
    for j in range(i+1):
        print(num, end=" ")
        num = num + 1
    print("")

------------------
list = [10, 15, 2, 4, 7, 55, 33, 12, 45]

max = list[0]
for i in list:
    if i > max:
        max = i

print(max)

min = list[0]

for j in list:
    if j<min:
        min= j

print(min)
--------------------------
list = [10, 15, 2, 4, 7, 55, 33, 12, 45]

sum =0
for i in list:
    sum =sum+i
print(sum)

------------------
Q. Print on pdf file by using end with functionality

list = ["abc.pdf", "def.xml", "xyx.pdf", "had.txt", "pqr.txt", "abc.png"]
for i in range(len(list)):
    str = list[i]
    pdfFile = str.endswith(".pdf")
    if pdfFile:
        print(list[i])

--------------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
abc.pdf
xyx.pdf

Process finished with exit code 0

-------------

Q.Print on pdf file by using start with functionality

listx = ["test_abc.pdf", "def.xml", "xyx.pdf", "had.txt", "test_pqr.txt", "test_xyz.png", "test_0000bang.json"]
for i in range(len(listx)):
    str = listx[i]
    pdfFile = str.startswith("test_")
    if pdfFile:
        print(listx[i])

----------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
test_abc.pdf
test_pqr.txt
test_xyz.png
test_0000bang.json

Process finished with exit code 0

----------------------------------
# string in which occurrence will be checked
string = "geeks for geeks" 

Q. Count the same string in string
print(string.count("geeks", 0, 5))
  
print(string.count("geeks", 0, 15))
-------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
After padding String is:                                   geeks for geeks                                  
After padding String is:  geeks for geeks

Process finished with exit code 0
---------------------------------------------
Q. how to count string in given sentance

string = "geeks for geeks"

# counts the number of times substring occurs in
# the given string between index 0 and 5 and returns
# an integer

print(string.count("geeks"))
print(string.count("geeks", 0, 5))

print(string.count("geeks", 0, 15))

-------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
2
1
2

Process finished with exit code 0

----------------------
word = 'geeks for geeks'

# returns first occurrence of Substring
result = word.find('geeks')
print("Substring 'geeks' found at index:", result)

result = word.find('for')
print("Substring 'for ' found at index:", result)

# How to use find()
if word.find('pawan') != -1:
    print("Contains given substring ")
else:
    print("Doesn't contains given substring")
-----------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
Substring 'geeks' found at index: 0
Substring 'for ' found at index: 6
Doesn't contains given substring

Process finished with exit code 0

-----------------------------

Q. reverse string by user input

print("Enter the name :", end="")
st = input()
for i in range(len(st)):
    print(st[i])  # kadak

# Approach-1
stx = ""
for j in st:
    stx = stx + j
print("This is reverse string -Approach-1 :", stx)

# Approach-2
stx2 = st[::-1]
print("This is reverse string -Approach-2 :", stx2)

# Approach-3
stx3 = "".join(reversed(st))
print("This is reverse string -Approach-2 :", stx3)
--------------
D:\PythonOCT-12\venv\Scripts\python.exe D:/PythonOCT-12/Xpython-Program/test2.py
Enter the name :kadak
k
a
d
a
k
This is reverse string -Approach-1 : kadak
This is reverse string -Approach-2 : kadak
This is reverse string -Approach-2 : kadak

Process finished with exit code 0
---------------------------------------------
Q. write a py to find out common letter between two strings?
ex. 1. NAINA
    2. REENE
approch-->use set then compare the two list

#
and is a Logical AND that returns True if both the operands are true whereas ‘&’ is a bitwise operator in Python that acts on bits and performs bit by bit operation.
value of letters: https://www.eso.org/~ndelmott/ascii.html
------------------
def common_letters():
    str1 = input("Enter 1st string name : ")
    str2 = input("Enter 2nd string name :")
    s1 = set(str1)
    s2 = set(str2)
    lst = s1 & s2
    print(lst)


common_letters()
---------------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Enter 1st string name : nishant
Enter 2nd string name :narwade
{'n', 'a'}

Process finished with exit code 0
-----------------------------------------------------------
Write a py program to count the frequecy of words appearing in string.
A2:
stx = "nishant narwade nishant tarwade prashant kkc"
li = stx.split(" ")
for i in range(len(li)):
    count = 0
    for j in range(i + 1):
        if li[i] == li[j]:
            count = count + 1
    if count >= 1:
        print(li[i], "count is ", count)
--------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
nishant count is  1
narwade count is  1
nishant count is  2
tarwade count is  1
prashant count is  1
kkc count is  1

Process finished with exit code 0
----------------------------------------
A1:
def freq_word():
    st = input("Enter the string :")
    li = st.split()
    d = {}

    for i in li:
        if i not in d.keys():
            d[i] = 0
        d[i] = d[i] + 1

    print(d)


freq_word()
-----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Enter the string :nishant narwade nishant nisha pranjali prana khuna prana
{'nishant': 2, 'narwade': 1, 'nisha': 1, 'pranjali': 1, 'prana': 2, 'khuna': 1}

Process finished with exit code 0
------------------------------
program:2
def find_word():
    st = "hello team how are you , team hello hello , how are you"
    li = st.split()
    li2 = []
    count = 0
    for i in li:
        if i not in li2:
            li2.append(i)

    for j in range(len(li2)):
        print("This is word name :",li[j], ": count is :",li.count(li2[j]))


find_word()
------------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
This is word name : hello : count is : 3
This is word name : team : count is : 2
This is word name : how : count is : 2
This is word name : are : count is : 2
This is word name : you : count is : 2
This is word name : , : count is : 2

Process finished with exit code 0
--------------------------------------------------------
def find_word():
    st = "nishant"
    li = st
    li2 = []
    count = 0
    for i in li:
        if i not in li2:
            li2.append(i)

    for j in range(len(li2)):
        print("This is word name :",li2[j], ": count is :",li.count(li2[j]))


find_word()
--------------------
D:\Python-NOV15\venv\Scripts\python.exe D:/Python-NOV15/Python_Study/CharRepted_String.py
This is word name : n : count is : 2
This is word name : i : count is : 1
This is word name : s : count is : 1
This is word name : h : count is : 1
This is word name : a : count is : 1
This is word name : t : count is : 1

Process finished with exit code 0

--------------------------------------------------------
li2 = 'nishant'
st1 = list(li2)
for i in range(len(st1)):
    count = 1
    for j in range(i + 1, len(st1)):
        if st1[i] == st1[j]:
            count = count + 1
            st1[j] = "-"
    if count >= 1 and st1[i] != "-":
        print(st1[i], count)
-------------
C:\Python39\python.exe D:/PythonHBF-NOV29/simple_Script/interview_Progran.py
n 2
i 1
s 1
h 1
a 1
t 1

Process finished with exit code 0
----------------------------------

Conversion of two list into Dictionary Using Python
def list_to_dict():
    keys = [1, 2, 3]
    values = ["one", "two", "three"]
    result = dict(zip(keys, values))
    print(result)


list_to_dict()
------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
{1: 'one', 2: 'two', 3: 'three'}

Process finished with exit code 0
---------------------------------------------
How to create dict using 2 lists
def list_to_dict():
    keys = [1, 2, 3]
    values = ["one", "two", "three"]
    result = dict(zip(keys, values))
    print(result)


list_to_dict()
-------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
{1: 'one', 2: 'two', 3: 'three'}

Process finished with exit code 0
---------------------------------------------------------------------

Frequently Asked Python Program 1: How To Swap 2 Numbers

num1 = input("Enter the first number :")
num2 = input("Enter the 2nd number :")

print("Before swapping 1st number is :", num1)
print("Before swapping 2nd  number is :", num2)

temp = num1
num1 = num2
num2 = temp

print("After swapping 1st number is :", num1)
print("after swapping 2nd  number is :", num2)

print("Approach2-------------------------")
num1, num2 = num1,num2

print(" Approach2 : After swapping 1st number is :", num1)
print("Approach2 :after swapping 2nd  number is :", num2)

--------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Enter the first number :45
Enter the 2nd number :75
Before swapping 1st number is : 45
Before swapping 2nd  number is : 75
After swapping 1st number is : 75
after swapping 2nd  number is : 45
Approach2-------------------------
 Approach2 : After swapping 1st number is : 75
Approach2 :after swapping 2nd  number is : 45

Process finished with exit code 0
---------------------------------------------
Frequently Asked Python Program 2: How To Check A Number is Prime Or Not

num = int(input("Enter the any number : "))
count = 0

for i in range(1, num + 1):
    if num % i == 0:
        count = count + 1
if count == 2:
    print("this is prime number : ", num)
else:
    print("This is not a prime number :", num)
-------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Enter the any number : 7
this is prime number :  7

Process finished with exit code 0
---------------------------------------------------------
Frequently Asked Python Program 3: How To Find Factorial of A Number
num = int(input("Enter any number : "))
factorial = 1

if num < 0:
    print("factorial of negative not calculated")
elif num == 0:
    print("factorial of 0 is 1")
else:
    for i in range(1, num + 1):
        factorial = factorial * i
    print("This is factorial number :", factorial)
----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Enter any number : 5
This is factorial number : 120

Process finished with exit code 0
------------------------------------------------------
Frequently Asked Python Program 4: Print Fibonacci Series
n1 = 0
n2 = 1
print(n1)
print(n2)
for i in range(1, 10):
    sum = n1 + n2
    print(sum)
    n1 = n2
    n2 = sum

-------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
0
1
1
2
3
5
8
13
21
34
55

Process finished with exit code 0
----------------------------------------------
Frequently Asked Python Program 5: Find Sum Of Elements in an Array
arr = [1,4,6,7,3]
print(sum(arr))

sumx = 0

for i in range(len(arr)):
    sumx= sumx+arr[i]

print(sumx)

----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
21
21

Process finished with exit code 0
----------------------------------------------------
Frequently Asked Python Program 6: Find Maximum & Minimum Elements in an Array
arr = [1, 4, 6, 7, 33, 22, 221, 111, 3]
max = arr[0]
for i in range(1, len(arr)):
    if arr[i] > max:
        max = arr[i]
print(max)

print("-------------minimum-----------------")
arr2 = [1, 4, 6, 7, 33, 22, 221, 111, 3]
min = arr[0]
for i in range(1, len(arr)):
    if arr[i] < min:
        min = arr[i]
print(min)
----------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
221
-------------minimum-----------------
1

Process finished with exit code 0
-------------------------------------------------------
Frequently Asked Python Program 7: How To Find Length of a List | Number of Elements in a List
arr = [1, 4, 6, 7, 33, 22, 221, 111, 3]
count = 0
for i in arr:
    count = count + 1

print("This is length :",count)
print("This is 2nd Approach :",len(arr))
------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
This is length : 9
This is 2nd Approach : 9

Process finished with exit code 0
------------------------------------------
Frequently Asked Python Program 8: How To Swap First & Last Elements of a List
arr = [1, 4, 6, 7, 33, 22, 221, 111, 3]
print("Before action the arrays is ", arr)
temp = arr[0]
arr[0] = arr[len(arr) - 1]
arr[len(arr) - 1] = temp
print(arr)

# Approach 2:
arr[0], arr[-1] = arr[0], arr[-1]
print(arr)

# App by using tuple
get = (arr[-1], arr[0])
arr[0], arr[-1] = get
print(arr)

# * operator
arr2 = [33, 34, 54, 111, 3]

start, *middle, last = arr
arr = [last, *middle, start]
print("This is approach 4 : ", arr2)

arr5 = [7, 34, 54, 111, 73]
first = arr5.pop(0)
last = arr5.pop(-1)

arr5.insert(0,last)
arr5.append(first)
print(arr5)

----------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before action the arrays is  [1, 4, 6, 7, 33, 22, 221, 111, 3]
[3, 4, 6, 7, 33, 22, 221, 111, 1]
[3, 4, 6, 7, 33, 22, 221, 111, 1]
[1, 4, 6, 7, 33, 22, 221, 111, 3]
This is approach 4 :  [33, 34, 54, 111, 3]
[73, 34, 54, 111, 7]

Process finished with exit code 0
--------------------------------------------
Frequently Asked Python Program 10: How To Remove Nth occurrence of the word from a List

mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
print(mylist)
word = "RCB"
n = 2
count = 1

for i in range(0, len(mylist) - 1):
    if mylist[i] == word:
        count = count + 1
        if count == n:
            del mylist[i]

print(mylist)
------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
['kkc', 'skb', 'IPL', 'IPL', 'skb', 'nmn']

Process finished with exit code 0

-----------------------------------------------
Frequently Asked Python Program 11: How To Search an Element in a List
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
for i in range(len(mylist)):
    print(mylist[i])
print("--------------------------list approach-2-----------------------")

flag = 0
ele = "skb"
for i in mylist:
    if i == ele:
        print("element is found",i)
        flag = 1
        break

if flag == 0:
    print("Element is not found",i)

print("--------------------------list approach-3-----------------------")
mylist2 = [1, 2, 4, 7, 99]
for i in mylist2:
    print(i)
---------------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
kkc
skb
IPL
RCB
IPL
skb
nmn
--------------------------list approach-2-----------------------
element is found skb
--------------------------list approach-3-----------------------
1
2
4
7
99

Process finished with exit code 0
-----------------------------------------------
Frequently Asked Python Program 12: How To Clear a List
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
print("Before the clear the list is :",mylist)
mylist.clear()
print("After the clear the list is :",mylist)

# Approach-2 , by using []
mylist = ["kkc", "skb", "IPL", "nmn","PMP"]
print("Before the clear the list is :",mylist)
mylist = []
print("After the clear the list is :",mylist)

# Approach-3 by using * operator
mylist = ["kkc", "skb", "IPL", "nmn","PMP"]
print("Before the clear the list is :",mylist)
mylist *= 0
print("After the clear the list is :",mylist)

# Approach-4 by using [:] operator
mylistx = ["kkc", "skb", "IPL", "nmn","PMP"]
print("Before the clear the list is :",mylistx)
del mylistx[:]
print("After the clear the list is :",mylistx)
-------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before the clear the list is : ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
After the clear the list is : []
Before the clear the list is : ['kkc', 'skb', 'IPL', 'nmn', 'PMP']
After the clear the list is : []
Before the clear the list is : ['kkc', 'skb', 'IPL', 'nmn', 'PMP']
After the clear the list is : []
Before the clear the list is : ['kkc', 'skb', 'IPL', 'nmn', 'PMP']
After the clear the list is : []

Process finished with exit code 0

-------------------------------------------
Frequently Asked Python Program 13: How To Reverse a List
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
print("Before the clear the list is :",mylist)
mylist.reverse()
print("After the clear the list is :",mylist)

------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before the clear the list is : ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
After the clear the list is : ['nmn', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'kkc']

Process finished with exit code 0

--------------------------------------------------
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
print("Before the clear the list is :",mylist)
mylist.reverse()
print("After the clear the list is :",mylist)

# Approach 2:
mylist2 = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
mylist2 = list[::-1]
print("After the clear the list is :",mylist2)



---------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before the clear the list is : ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
After the clear the list is : ['nmn', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'kkc']
After the clear the list is : list[slice(None, None, -1)]

Process finished with exit code 0
-------------------------------------------------
Frequently Asked Python Program 14:How To Clone or Copy a List
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn"]
print("Before the clear the list is :", mylist)

# Approach1
mylist_copy = mylist[:]
print("Approach1", mylist_copy)

# Approach2
mylist2_Copy = []
mylist2 = ["kkc", "skb", "nmn"]
mylist2_Copy.extend(mylist2)
print("Approach2", mylist2_Copy)

# Approach3
mylist3_Copy = []
mylist3 = ["kkc", "skb", "nmn"]
mylist3_Copy = list(mylist2)
print("Approach3", mylist3_Copy)

# Approach4
mylist4_Copy = []
mylist4 = ["kkc", "skb", "nmn"]
mylist4_Copy = mylist4.copy()
print("Approach3", mylist4_Copy)

# Approach5
mylist5 = [1,22,31,4]
mylist_copy5=[i for i in mylist5]
print(mylist_copy5)
------------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before the clear the list is : ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
Approach1 ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn']
Approach2 ['kkc', 'skb', 'nmn']
Approach3 ['kkc', 'skb', 'nmn']
Approach3 ['kkc', 'skb', 'nmn']
[1, 22, 31, 4]

Process finished with exit code 0
---------------------------------------------------------------------------------
Frequently Asked Python Program 15: Count Occurrences of an element in a list
mylist = ["kkc", "skb", "IPL", "RCB", "IPL", "skb", "nmn", "skb"]
print("Before the clear the list is :", mylist)

# Approach1
count = 0
ele = "skb"

for i in mylist:
    if i == ele:
        count = count + 1

if count > 1:
    print("This is element :", ele, "And count is :", count)

-----------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Before the clear the list is : ['kkc', 'skb', 'IPL', 'RCB', 'IPL', 'skb', 'nmn', 'skb']
This is element : skb And count is : 3

Process finished with exit code 0

--------------------
Frequently Asked Python Program 19:Find 2nd Largest Number in a List
mylist = [1, 4, 2, 66, 44, 33, 22, 9, 2, 22, 33, 45, 65, 78]
mylist.sort()
print("first largest number ", mylist[-1])
print("Second largest number ", mylist[-2])

my_list2 = [2, 3, 6, 56, 78]
mylist_set = set(my_list2)
print(mylist_set)
mylist_set.remove(max(mylist_set))
print(max(mylist_set))

---------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
first largest number  78
Second largest number  66
{2, 3, 6, 78, 56}
56

Process finished with exit code 0

----------------------------------
Frequently Asked Python Program 21:How To Reverse Words in a String
stx = "My name is nishant"
words = stx.split(" ")
print(words)

words = words[::-1]
print(words)

-----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
['My', 'name', 'is', 'nishant']
['nishant', 'is', 'name', 'My']

Process finished with exit code 0

---------------------------------------
Frequently Asked Python Program 22:Find Sub string Presence in a String
stx = "My name is nishant"
substring = "is"
if stx.find(substring):
    print("found")
else:
    print("Not found")

-----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
found

Process finished with exit code 0

---------------------
Frequently Asked Python Program 24:Check if a string contains any special character
# initializing bad_chars_list
bad_chars = ['@', '!', '#']

# initializing test string
test_string = "My @@@name is### nishant !!!"

# printing original string
print("Original String : " + test_string)

# using replace() to
# remove bad_chars
for i in bad_chars:
    test_string = test_string.replace(i, '')

# printing resultant string
print("Resultant list is : " + str(test_string))
----------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Original String : My @@@name is### nishant !!!
Resultant list is : My name is nishant 

Process finished with exit code 0

-------------------
Pattern :1
print("Enter the number for pattern :",end="")
num = int(input())
for i in range(num):
    for j in range(i + 1):
        print("*", end="")
    print()
-------
D:\Python-NOV15\venv\Scripts\python.exe D:/Python-NOV15/Python_Study/CharCount.py
Enter the number for pattern :5
*
**
***
****
*****

Process finished with exit code 0
-----------------------------------------
Pattern2:
print("Enter the number for pattern :",end="")
num = int(input())
for i in range(num):
    for j in range(i + 1):
        print(j+1, end="")
    print()
----------
D:\Python-NOV15\venv\Scripts\python.exe D:/Python-NOV15/Python_Study/CharCount.py
Enter the number for pattern :5
1
12
123
1234
12345

Process finished with exit code 0
---------------------------------------------------
import copy

# In deep deepcopy concept , original list work as adhard card ,then can't change 
# In deep copy any changes to copy of object do not reflect the original object
li = [1, 3, 7, 4, 22]


de_li = copy.deepcopy(li)
print("1D_status of deep copy li is :", de_li)
print("1D_status of Original list- li is :", li)
de_li[1] = 200
print("1D_status of deep copy li is for update :", de_li)
print("1D_status of Original list- li is for update :", li)

de_li.append([32, 23, 55])
print("1D_status of deep copy li is for appending :", de_li)
print("1D_status of Original list- li is for appending :", li)

li2 = [[20, 40, 50], [11, 55, 33]]
de_li2 = copy.deepcopy(li2)
print("2D_status of deep copy li2 is :", de_li2)
print("2D_status of Original list- li2 is :", li2)

de_li2[1][1]=77
print("2D_status of deep copy li2 is for update :", de_li2)
print("2D_status of Original list- li2 is for update :", li2)
de_li2.append([32, 23, 55])
print("2D_status of deep copy li2 is for appending :", de_li2)
print("2D_status of Original list- li2 is for appending :", li2)

------------
output:
D:\Python-NOV15\venv\Scripts\python.exe D:/Python-NOV15/Python_Study/test.py
1D_status of deep copy li is : [1, 3, 7, 4, 22]
1D_status of Original list- li is : [1, 3, 7, 4, 22]
1D_status of deep copy li is for update : [1, 200, 7, 4, 22]
1D_status of Original list- li is for update : [1, 3, 7, 4, 22]
1D_status of deep copy li is for appending : [1, 200, 7, 4, 22, [32, 23, 55]]
1D_status of Original list- li is for appending : [1, 3, 7, 4, 22]
2D_status of deep copy li2 is : [[20, 40, 50], [11, 55, 33]]
2D_status of Original list- li2 is : [[20, 40, 50], [11, 55, 33]]
2D_status of deep copy li2 is for update : [[20, 40, 50], [11, 77, 33]]
2D_status of Original list- li2 is for update : [[20, 40, 50], [11, 55, 33]]
2D_status of deep copy li2 is for appending : [[20, 40, 50], [11, 77, 33], [32, 23, 55]]
2D_status of Original list- li2 is for appending : [[20, 40, 50], [11, 55, 33]]

Process finished with exit code 0
---------------------------------------------------
ShallowCopy_Concept:
import copy

# In deep deepcopy concept , original list work as adhard card ,then can't change
# In deep copy any changes to copy of object do not reflect the original object
li = [1, 3, 7, 4, 22]

de_li = li.copy()
print("1D_status of copy li is :", de_li)
print("1D_status of Original list- li is :", li)
de_li[1] = 200
print("1D_status of  copy li is for update :", de_li)
print("1D_status of Original list- li is for update :", li)

de_li.append([32, 23, 55])
print("1D_status of copy li is for appending :", de_li)
print("1D_status of Original list- li is for appending :", li)

li2 = [[20, 40, 50], [11, 55, 33]]
de_li2 = li2.copy()
print("2D_status of copy li2 is :", de_li2)
print("2D_status of Original list- li2 is :", li2)

de_li2[1][1] = 77
print("2D_status of copy li2 is for update :", de_li2)
print("2D_status of Original list- li2 is for update :", li2)
de_li2.append([32, 23, 55])
print("2D_status of copy li2 is for appending :", de_li2)
print("2D_status of Original list- li2 is for appending :", li2)

de_li2.remove([20,40,50])

print("2D_status of copy li2 is for removing :", de_li2)
print("2D_status of Original list- li2 is for removing :", li2)


---------
D:\Python-NOV15\venv\Scripts\python.exe D:/Python-NOV15/Python_Study/ShallowCopy_Concept.py
1D_status of copy li is : [1, 3, 7, 4, 22]
1D_status of Original list- li is : [1, 3, 7, 4, 22]
1D_status of  copy li is for update : [1, 200, 7, 4, 22]
1D_status of Original list- li is for update : [1, 3, 7, 4, 22]
1D_status of copy li is for appending : [1, 200, 7, 4, 22, [32, 23, 55]]
1D_status of Original list- li is for appending : [1, 3, 7, 4, 22]
2D_status of copy li2 is : [[20, 40, 50], [11, 55, 33]]
2D_status of Original list- li2 is : [[20, 40, 50], [11, 55, 33]]
2D_status of copy li2 is for update : [[20, 40, 50], [11, 77, 33]]
2D_status of Original list- li2 is for update : [[20, 40, 50], [11, 77, 33]]
2D_status of copy li2 is for appending : [[20, 40, 50], [11, 77, 33], [32, 23, 55]]
2D_status of Original list- li2 is for appending : [[20, 40, 50], [11, 77, 33]]
2D_status of copy li2 is for removing : [[11, 77, 33], [32, 23, 55]]
2D_status of Original list- li2 is for removing : [[20, 40, 50], [11, 77, 33]]
-------------------------------------
multiple inheritance:
class A:
    def m1(self):
        print("M1 method")


class B:
    def m1(self):
        print("M2 method")


class C(B,A): # same method name in this case first left side will execute.
    def m3(self):
        print("M3 method")


ob = C()
#ob.m1()
#ob.m2()
#ob.m3()

ob.m1()
ob.m3()


-----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
M2 method
M3 method

Process finished with exit code 0
---------------------
constuctor--->parent class having constuctor , it will invoke parent class constructor
example:
class A:
    def m1(self):
        print("M1 method")

    def __init__(self):
        print("Parent class constructor -A")


class B(A):
    def __init__(self):
        print("Child class constructor -B")
        super().__init__() #Approach 1
        A.__init__(self) # Approach 2

    def m1(self):
        print("M2 method")


ob = B()
ob.m1()
--------------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
Child class constructor -B
Parent class constructor -A
Parent class constructor -A
M2 method

Process finished with exit code 0
------------------------------------------------
class A:
    def m1(self, a, b):
        print("local variable :", a + b)
        self.a = a
        self.b = b

    def m2(self):
        print("Class level variable :", self.a + self.b)


ob = A()
ob.m1(20, 30)
ob.m2()
---------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
local variable : 50
Class level variable : 50

Process finished with exit code 0
----------------------------------------------------
Abstract Class : example:
from abc import ABC, abstractmethod


class Animal:
    @abstractmethod
    def eat(self):
        pass


class Tiger(Animal):
    def eat(self):
        print("eat NON veg")


class Cow(Animal):
    def eat(self):
        print("eat VEG")


t = Tiger()
t.eat()

c = Cow()
c.eat()
-----------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
eat NON veg
eat VEG

Process finished with exit code 0

--------------------------
file write 

file = open("D:\\pythonProject\\API-Backend-Automation\\DATA\\abc.txt", "w")
file.write("My name is nishant")
file.write("Living in Nanded")
file.close()
------------
My name is nishantLiving in Nanded
-------------------
file = open("D:\\pythonProject\\API-Backend-Automation\\DATA\\abc.txt", "w")
file.write("My name is nishant")
file.write(" Living in Nanded")
file.close()

file2 = open("D:\\pythonProject\\API-Backend-Automation\\DATA\\abc.txt", "r")
# print(file2.read())
# print(file2.read(10))  # read only 10 char from file
print(file2.readline())  # read all the line ,it's in arrays format
file.close()

---------
C:\Python39\python.exe D:/pythonProject/API-Backend-Automation/OCT27/test.py
My name is nishant Living in Nanded

Process finished with exit code 0
-------------

Python program to print the duplicate elements of an array

