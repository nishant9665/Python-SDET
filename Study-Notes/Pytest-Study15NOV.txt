You should consider upgrading via the 'c:\python39\python.exe -m pip install --upgrade pip' command.

--------
Q. How to run all testcases from folder

 python -m pytest -v -s
by using this command u can run entire folder

---
def test_ipl():
    print("Pandya -GTI- Winners")


def test_NishantDream11():
    print("Nishant -Dream 11 team")
--------
file2 -->test_demo2.py

def test_ipl2023():
    print("KL rahul PX11- Winners")


def test_AbhiDream11():
    print("Nishant -Dream 11 team")
-----------
output-->
PS D:\Python-NOV15\PyTest-Study> python -m pytest -v      
================================================================================= test session starts =================================================================================
platform win32 -- Python 3.9.5, pytest-7.2.0, pluggy-1.0.0 -- C:\Python39\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15\PyTest-Study
collected 4 items

test_demo1.py::test_ipl PASSED                                                                                                                                                   [ 25%]
test_demo1.py::test_NishantDream11 PASSED                                                                                                                                        [ 50%]
test_demo2.py::test_ipl2023 PASSED                                                                                                                                               [ 75%]
test_demo2.py::test_AbhiDream11 PASSED                                                                                                                                           [100%]

------------------------------------------------------------------------------------------------------------------------------------------
Q. can i run the specific testcase from folder above 2 file having dream11 method name.
i.e dream11 ., creditcard
# method name should have sense
-k stand for method name executions
-s  logs in out put
-v stands for more info metadata

# you can run specific file with py.test<filename>



PS D:\Python-NOV15\PyTest-Study> python -m pytest -k Dream11 -v -s
================================================================================= test session starts =================================================================================
platform win32 -- Python 3.9.5, pytest-7.2.0, pluggy-1.0.0 -- C:\Python39\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15\PyTest-Study
collected 4 items / 2 deselected / 2 selected

test_demo1.py::test_NishantDream11 Nishant -Dream 11 team
PASSED
test_demo2.py::test_AbhiDream11 Nishant -Dream 11 team
PASSED

=========================================================================== 2 passed, 2 deselected in 0.01s 

Q. how to run smoke ,sanity and regrssion means like groups
  tagging says in cucumber ,in TestNG like groups
 how to work in pytest
ANS- Im using file 1 and file2

file1
--
import pytest


def test_ipl():
    print("Pandya -GTI- Winners")


@pytest.mark.smoke
def test_NishantDream11():
    print("Nishant -Dream 11 team")
---------
file2
----
import pytest


def test_ipl2023():
    print("KL rahul PX11- Winners")


@pytest.mark.smoke
def test_AbhiDream11():
    print("Nishant -Dream 11 team")
---------
PS D:\Python-NOV15> python -m pytest -m smoke  -v -s
============================ test session starts ============================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0 -- D:\Python-NOV15\
venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15
collected 4 items / 2 deselected / 2 selected

PyTest-Study/test_demo1.py::test_NishantDream11 Nishant -Dream 11 team
PASSED
PyTest-Study/test_demo2.py::test_AbhiDream11 Nishant -Dream 11 team
PASSED

============================= warnings summary ============================== 
PyTest-Study\test_demo1.py:8
  D:\Python-NOV15\PyTest-Study\test_demo1.py:8: PytestUnknownMarkWarning: Unkn
own pytest.mark.smoke - is this a typo?  You can register custom marks to avoi
d this warning - for details, see https://docs.pytest.org/en/stable/how-to/mar
k.html
    @pytest.mark.smoke

PyTest-Study\test_demo2.py:8
  D:\Python-NOV15\PyTest-Study\test_demo2.py:8: PytestUnknownMarkWarning: Unkn
own pytest.mark.smoke - is this a typo?  You can register custom marks to avoi
d this warning - for details, see https://docs.pytest.org/en/stable/how-to/mar
k.html
    @pytest.mark.smoke

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html       
================ 2 passed, 2 deselected, 2 warnings in 0.06s ================ 
Q. I want to skip the particular testcases then how to do this ?
ANS:
1.i'm using 2 file or folder level structure
2.Using cmd command
3.After execution able to see the status and report of @skip function
File1:
-------
import pytest


def test_ipl():
    print("Pandya -GTI- Winners")


@pytest.mark.skip
def test_NishantDream11():
    print("Nishant -Dream 11 team")
----------
file2:
import pytest


@pytest.mark.skip
def test_ipl2023():
    print("KL rahul PX11- Winners")


def test_AbhiDream11():
    print("Nishant -Dream 11 team")
----------------
cmd :  python -m pytest -v -s

output:

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS D:\Python-NOV15> python -m pytest -v -s
============================ test session starts ============================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0 -- D:\Python-NOV15\
venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15
collected 4 items

PyTest-Study/test_demo1.py::test_ipl Pandya -GTI- Winners
PASSED
PyTest-Study/test_demo1.py::test_NishantDream11 SKIPPED (unconditi...)        
PyTest-Study/test_demo2.py::test_ipl2023 SKIPPED (unconditional skip)
PyTest-Study/test_demo2.py::test_AbhiDream11 Nishant -Dream 11 team
PASSED

======================= 2 passed, 2 skipped in 0.07s ======================== 
PS D:\Python-NOV15> 
-----------------------
Q. What is use of xfail in pytest ?
ANS:1. execution has done with status XPASS
2.but not reported , in this case we can use.
3.Required for further testcases to be run that cases you can use.
4.This is unique annoantion that is not present in TestNG and Junit
5.This is not reported like pass ,fail and skip
6.I'm using 2 file

---
file1:
import pytest


def test_ipl():
    print("Pandya -GTI- Winners")


@pytest.mark.xfail
def test_NishantDream11():
    print("Nishant -Dream 11 team")
---------
file2:
import pytest


@pytest.mark.xfail
def test_ipl2023():
    print("KL rahul PX11- Winners")


def test_AbhiDream11():
    print("Nishant -Dream 11 team")


@pytest.mark.smoke
def test_my_Circle11():
    print("My -circle team")
--------
CMD:  python -m pytest -v -s
---
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS D:\Python-NOV15> python -m pytest -v -s
============================ test session starts ============================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0 -- D:\Python-NOV15\
venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15
collected 5 items

PyTest-Study/test_demo1.py::test_ipl Pandya -GTI- Winners
PASSED
PyTest-Study/test_demo1.py::test_NishantDream11 Nishant -Dream 11 team        
XPASS
PyTest-Study/test_demo2.py::test_ipl2023 KL rahul PX11- Winners
XPASS
PyTest-Study/test_demo2.py::test_AbhiDream11 Nishant -Dream 11 team
PASSED
PyTest-Study/test_demo2.py::test_my_Circle11 My -circle team
PASSED

============================= warnings summary ==============================
PyTest-Study\test_demo2.py:13
  D:\Python-NOV15\PyTest-Study\test_demo2.py:13: PytestUnknownMarkWarning: Unk
nown pytest.mark.smoke - is this a typo?  You can register custom marks to avo
id this warning - for details, see https://docs.pytest.org/en/stable/how-to/ma
rk.html
    @pytest.mark.smoke

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html       
================== 3 passed, 2 xpassed, 1 warning in 0.09s ================== 
PS D:\Python-NOV15> 
---------------------------------
Q. What is fixture in python and importance
ANS:in general ,junit TestNG
like before test what should be done
before start testcases what is prerquite to be done
this is base concept of in pytest that is fixture
------
File
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")


def test_fixtureDemo():
    print("I will executed step in fixtureDemo method- Testcase1")


def test_fixtureDemo2():
    print("I will executed step in fixtureDemo method- Testcase2")
------------
CMD : python -m pytest .\test_fixtureDemo.py -s 
output:
================================= 2 passed in 0.01s ================================== 
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo.py -s   
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 2 items                                                                      

test_fixtureDemo.py I will executed step in fixtureDemo method- Testcase1
.I will executed step in fixtureDemo method- Testcase2
.

================================= 2 passed in 0.01s ================================== 
Adding the fixture in method let see the output:

file:
import pytest


@pytest.fixture
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")


def test_fixtureDemo(setUp):
    print("I will executed step in fixtureDemo method- Testcase1")


def test_fixtureDemo2(setUp):
    print("I will executed step in fixtureDemo method- Testcase2")
--------
CMD: python -m pytest .\test_fixtureDemo.py -s

output :
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 2 items                                                                      

test_fixtureDemo.py I will be executing first
I will executed step in fixtureDemo method- Testcase1
.I will executed last
I will be executing first
I will executed step in fixtureDemo method- Testcase2
.I will executed last


================================= 2 passed in 0.01s ================================== 
Importance of Conftest file & Scope of fixtures for building Generic fixtures
1. This is standard to be follow
2. You should be define all decalration for prerquisites
3.Fixture are used as setup and tear down methods for test cases -conftest file to generaalize fixture and make it availble to all test cases

conftest file:
import pytest


@pytest.fixture
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")
----------
general file:
import pytest


def test_fixtureDemo1(setUp):
    print("I will executed step in fixtureDemo method- Testcase1")


def test_fixtureDemo2(setUp):
    print("I will executed step in fixtureDemo method- Testcase2")
----------
CMD : python -m pytest .\test_fixtureDemo2.py -s
output:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo2.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 2 items

test_fixtureDemo2.py I will be executing first
I will executed step in fixtureDemo method- Testcase1
.I will executed last
I will be executing first
I will executed step in fixtureDemo method- Testcase2
.I will executed last


================================= 2 passed in 0.01s ==================================
Q.how to execute the testcases at class with conftest file
1.put the conf file as it is.
2.add the usefixtures and pass the method name as setUp
3.This will be executed on each method as start and end

conftest file :
import pytest


@pytest.fixture
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")
----
testcase file :
import pytest


@pytest.mark.usefixtures("setUp")
class TestExample:
    def test_fixtureDemo1(self):
        print("I will executed step in fixtureDemo method- Testcase1")

    def test_fixtureDemo2(self):
        print("I will executed step in fixtureDemo method- Testcase2")
-------
CMD:python -m pytest .\test_fixtureDemo3.py -s

output :
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo3.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 2 items                                                                      

test_fixtureDemo3.py I will be executing first
I will executed step in fixtureDemo method- Testcase1
.I will executed last
I will be executing first
I will executed step in fixtureDemo method- Testcase2
.I will executed last


================================= 2 passed in 0.01s ================================== 
How to executed the before or start at one time and tear down at one time in class
ANS:1. change in conftest file add the scope as class
2. run testcases see the o/p


conftest file :

import pytest


@pytest.fixture(scope="class")
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")
-------------
file:
import pytest


@pytest.mark.usefixtures("setUp")
class TestExample:
    def test_fixtureDemo1(self):
        print("I will executed step in fixtureDemo method- Testcase1")

    def test_fixtureDemo2(self):
        print("I will executed step in fixtureDemo method- Testcase2")
------------------
cmd:  python -m pytest .\test_fixtureDemo3.py -s

output:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo3.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 2 items                                                                      

test_fixtureDemo3.py I will be executing first
I will executed step in fixtureDemo method- Testcase1
.I will executed step in fixtureDemo method- Testcase2
.I will executed last


================================= 2 passed in 0.01s ================================== 
Another uses of fixture:

1.data in fixture in that case use should be pass the paramter
madatory to pass fixture name in method.
2. passing the argument in that case u should be pass as paramter in method level

conftest file:
import pytest


@pytest.fixture(scope="class")
def setUp():
    print("I will be executing first")
    yield
    print("I will executed last")


@pytest.fixture()
def dataLoad():
    print("user profile data is being created")
    return ["BOB", "SBI", "HDFC", "Axis"]

---------
file :
import pytest


@pytest.mark.usefixtures("setUp")
@pytest.mark.usefixtures("dataLoad")
class TestExample:
    def test_fixtureDemo1(self, dataLoad):
        print(" bank data is ", dataLoad)
-------------------------------
cmd:
ouput:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo3.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 1 item                                                                       

test_fixtureDemo3.py user profile data is being created
 bank data is  ['BOB', 'SBI', 'HDFC', 'Axis']
.

================================= 1 passed in 0.01s ================================== 
file2:
import pytest


@pytest.mark.usefixtures("dataLoad")
class TestExample:
    def test_fixtureDemo1(self, dataLoad):
        print(" bank data is ", dataLoad[0])
        print(" bank data is ", dataLoad[1])
        print(" bank data is ", dataLoad[2])
        print(" bank data is ", dataLoad[3])
--------------------
cmd:python -m pytest .\test_fixtureDemo3.py -s

output:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_fixtureDemo3.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 1 item

test_fixtureDemo3.py user profile data is being created
 bank data is  BOB
 bank data is  SBI
 bank data is  HDFC
 bank data is  Axis
.

================================= 1 passed in 0.01s ================================== 
Q.How to run testcase with multiple data set
ANS: data driven and parametrization can be done with return in tuple format
#when you define fixture scope to class only,it will run once before class is initiated and pass the parameter.
2. will try with method level and then go for class level
3. Try with List then executed



contest file:
@pytest.fixture(params=["chrome", "firefox", "IE"])
def crossBrowser(request):
    return request.param
-------
file:
def test_crossBrowser(crossBrowser):
    print(crossBrowser)
---------
cmd:python -m pytest .\test_dataDriven.py -s
output:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_dataDriven.py -s
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0
rootdir: D:\Python-NOV15\PyTest-Study
collected 3 items

test_dataDriven.py chrome
.firefox
.IE
.

================================= 3 passed in 0.01s ==================================
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_dataDriven.py -s -v
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0 -- D:\Python-NOV15\venv\Scri
pts\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15\PyTest-Study
collected 3 items                                                                      

test_dataDriven.py::test_crossBrowser[chrome] chrome
PASSED
test_dataDriven.py::test_crossBrowser[firefox] firefox
PASSED
test_dataDriven.py::test_crossBrowser[IE] IE
PASSED

================================= 3 passed in 0.01s ================================== 
Q.How to run n number of differnt data like tuple 

file:conf test
@pytest.fixture(params=[("chrome","India","MH"), ("firefox","US"), ("IE","AP")])
def crossBrowser(request):
    return request.param

-------
file:
def test_crossBrowser(crossBrowser):
    print(crossBrowser[1])
---------
cmd:python -m pytest .\test_dataDriven.py -s -v
output:
PS D:\Python-NOV15\PyTest-Study> python -m pytest .\test_dataDriven.py -s -v
================================ test session starts =================================
platform win32 -- Python 3.7.1, pytest-7.2.0, pluggy-1.0.0 -- D:\Python-NOV15\venv\Scri
pts\python.exe
cachedir: .pytest_cache
rootdir: D:\Python-NOV15\PyTest-Study
collected 3 items                                                                      

test_dataDriven.py::test_crossBrowser[crossBrowser0] India
PASSED
test_dataDriven.py::test_crossBrowser[crossBrowser1] US
PASSED
test_dataDriven.py::test_crossBrowser[crossBrowser2] AP
PASSED

================================= 3 passed in 0.01s ================================== 
How to run testcase and generate the html report
1.go to website pytest-html report--->https://pypi.org/project/pytest-html/
2.copy the command run in cmd of pychar
pip install pytest-html-reporter
3. run the testcase with below command
CMD:  python -m pytest --html-report=./report
4.go to report folder check the html file name as<pytest_html_report.html>
5. open in chrome check all fail and pass,skip etc testcase

----------------------------------------


driver = webdriver.Chrome("D:\\pythonProject\\API-Backend-Automation\\ALL-EXE\\chromedriver.exe")

driver = webdriver.Chrome(ChromeDriverManager().install())
driver.implicitly_wait(10)
driver.get("https://classic.crmpro.com/")

print(driver.title)

username = driver.find_element(By.NAME, 'username')
password = driver.find_element(By.NAME, 'password')
login_button = driver.find_element(By.XPATH, "//input[@value='Login']")

username.send_keys("batchautomation")
password.send_keys("Test@12345")
login_button.click()


















